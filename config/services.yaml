parameters:
  env(AWS_S3_READ_ENDPOINT): null
  env(AWS_S3_WRITE_ENDPOINT): null
  env(ELASTICSEARCH_HOST): 'http://elasticsearch:9200'


services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
  
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'
  
  App\Serializer\SerialisationGroupGenerator:
    decorates: 'api_platform.serializer.context_builder'
    arguments:
      $decorated: '@App\Serializer\SerialisationGroupGenerator.inner'
  
  
  ### Services
  App\OpenApi\AuthDecorator:
    decorates: 'api_platform.openapi.factory'
  

  ### Entity listeners
  App\Doctrine\EntityListener\UserListener:
    tags:
      - { name: doctrine.orm.entity_listener, priority: 10 }
  
  ### State Processors    
  App\State\User\SignupProcessor:
    bind:
      $decorated: '@ApiPlatform\Doctrine\Common\State\PersistProcessor'


  ### Entity listeners
  App\Doctrine\EntityListener\OwnedEntityListener:
    class: App\Doctrine\EntityListener\OwnedEntityListener
    tags:
      - { name: doctrine.event_listener, event: prePersist }
  

  App\Doctrine\EntityListener\EntityListener:
    class: App\Doctrine\EntityListener\EntityListener
    tags:
      - { name: doctrine.event_listener, event: prePersist }
      - { name: doctrine.event_listener, event: preUpdate }
  

  App\Auth\GoogleAuthService:
      arguments:
          $clientId: '%env(GOOGLE_OAUTH2_CLIENT_ID)%'
          $redirectUrl: '%env(GOOGLE_OAUTH2_REDIRECT_URI)%'
          $clientSecret: '%env(GOOGLE_OAUTH2_SECRET)%'

  App\Services\AuthService:
      arguments:
          $tokenParameterName: "%gesdinet_jwt_refresh_token.token_parameter_name%"
          $expirationParameterName: "%gesdinet_jwt_refresh_token.return_expiration_parameter_name%"
          $tokenTtl: "%gesdinet_jwt_refresh_token.ttl%"
    

  App\Controller\SentryController:
      arguments:
          $appUrl: '%env(APP_URL)%'
    
  App\Bridge\OneSignal\Client:
        arguments:
            $appId: '%env(ONESIGNAL_APP_ID)%'
            $apiKey: '%env(ONESIGNAL_API_KEY)%'
            $userAuthKey: '%env(ONESIGNAL_USER_AUTH_KEY)%'
